---
#
# Install a local kvm hypervisor and tools to run virt-lab.
#
# Usage:
#    ansible-galaxy install -r requirements.yaml
#    ansible-playbook virtlab.yaml
#
- hosts: localhost
  vars:
    config_systemd_resolved: true
    # Setup libvirt's dnsmasq with servers and the no-resolv to
    # avoid a DNS loop with systemd-resolved.
    pri_domain_name: example.com
    pri_dns: 8.8.8.8
    sec_dns: 8.8.4.4
    kvm_config_virtual_networks: true
    kvm_virtual_networks:
    - name: virtlab
      mode: nat
      bridge_name: vlbr0
      enable_dhcp: true
      dhcp_gateway: 192.168.123.1
      dhcp_netmask: 255.255.255.0
      dhcp_scope_start: 192.168.123.32
      dhcp_scope_end: 192.168.123.254
      autostart: yes
      state: active

  roles:
    - role: mrlesmithjr.kvm

  tasks:
    - name: Check bridge interface DNS resolver.
      command: >
        systemd-resolve
        --status {{ kvm_virtual_networks[0]['bridge_name'] }}
      register: bridge_status
      changed_when: false
      when: config_systemd_resolved

    - name: Setup bridge interface DNS resolver.
      become: true
      command: >
        systemd-resolve
        --interface {{ kvm_virtual_networks[0]['bridge_name'] }}
        --set-dns {{ kvm_virtual_networks[0]['dhcp_gateway'] }}
        --set-domain {{ pri_domain_name }}
      when: >
        config_systemd_resolved and
          (not "DNS Servers: " + kvm_virtual_networks[0]['dhcp_gateway'] in bridge_status.stdout or
           not "DNS Domain: " + pri_domain_name in bridge_status.stdout)

    - name: Set environment variable in profile.
      lineinfile:
        path: "{{ ansible_facts['user_dir'] }}/.profile"
        firstmatch: true
        regexp: '^LIBVIRT_DEFAULT_URI='
        line: "LIBVIRT_DEFAULT_URI='qemu:///system'"
      when: not 'LIBVIRT_DEFAULT_URI' in ansible_facts.env
      notify:
        - logout required

    - file:
        state: directory
        path:  "{{ ansible_facts['user_dir'] }}/.ansible/repos"

    - git:
        repo: https://github.com/giovtorres/kvm-install-vm.git
        dest:  "{{ ansible_facts['user_dir'] }}/.ansible/repos/kvm-install-vm"

    - name: Install kvm-install-vm script
      become: true
      copy:
        src: "{{ ansible_facts['user_dir'] }}/.ansible/repos/kvm-install-vm/kvm-install-vm"
        dest: /usr/local/bin/kvm-install-vm
        remote_src: yes
        mode: '0755'

  handlers:
    - name: logout required
      pause:
        prompt: |
          Your profile has been updated.
          Please log out and log in again before continuing.
          You may use 'su - {{ ansible_user }}' to login.
          Press <enter> to continue.
